<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.vaadin.addon</groupId>
	<artifactId>v-ol3</artifactId>
	<packaging>bundle</packaging>
	<version>2.3</version>
	<name>OpenLayers 3 Wrapper for Vaadin</name>
    <organization>
        <name>VOL3</name>
        <url>http://vaadin.com</url>
    </organization>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--<vaadin.version>7.7.6</vaadin.version>-->
        <vaadin.version>8.6.0</vaadin.version>

        <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>

		<!-- ZIP Manifest fields -->
		<Implementation-Version>${project.version}</Implementation-Version>
		<!-- Must not change this because of the Directory -->
		<Implementation-Title>${project.name}</Implementation-Title>
		<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
		<Vaadin-License-Title>Apache License 2.0</Vaadin-License-Title>
		<Vaadin-Addon>${artifactId}-${project.version}.jar</Vaadin-Addon>
        <skipTests>true</skipTests>
	</properties>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<dependencies>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>9.4.41.v20210516</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>9.2.14.v20151106</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>9.2.14.v20151106</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>9.2.14.v20151106</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-proxy</artifactId>
            <version>9.2.14.v20151106</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>test</scope>
        </dependency>
		<!-- This can be replaced with TestNG or some other test framework supported by the surefire plugin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
        </dependency>

         <!--<dependency>-->
                    <!--<groupId>org.eclipse.jetty</groupId>-->
                    <!--<artifactId>jetty-webapp</artifactId>-->
                    <!--<version>7.2.2.v20101205</version>-->
                    <!--<scope>test</scope>-->
                <!--</dependency>-->


        <dependency>
            <groupId>org.vaadin</groupId>
            <artifactId>gwt-ol3</artifactId>
            <version>2.3</version>
        </dependency>
        <!-- for serializing features as geojson -->
        <dependency>
            <groupId>de.grundid.opendatalab</groupId>
            <artifactId>geojson-jackson</artifactId>
            <version>1.2</version>
        </dependency>
        <!--
        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>contextmenu</artifactId>
            <version>4.5</version>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-context-menu</artifactId>
            <version>3.0.0</version>
        </dependency>
    </dependencies>

<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!-- Implementation-Title and Implementation-Version come from the
                            POM by default -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <!-- Package format version - do not change -->
                            <Vaadin-Package-Version>1</Vaadin-Package-Version>

                            <!-- Comma-separated list of widgetsets in the package -->
                            <!-- TODO figure out a way make this automatically configured -->
                            <Vaadin-Widgetsets>org.vaadin.addon.vol3.WidgetSet</Vaadin-Widgetsets>
                        </manifestEntries>
                    </archive>
                    <excludes>
                        <!-- Remove resources included due to gwt compilation -->
                        <exclude>**/demoandtestapp/*</exclude>
                        <exclude>VAADIN/img/*</exclude>
                        <exclude>VAADIN.samples/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/testwebapp/VAADIN/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/test/resources/VAADIN/</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- This creates a zip file of jar and sources jar. When publishing in
            the Directory this makes sources available to maven users automatically.
            We could also use this to package required dependecies for those poor developer
            souls that still dont know how to use a build system that supports transient
            dependencies... -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.plugin.version}</version>
                <executions>
                    <execution>
                        <id>testwidgetset</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <!--<configuration>-->
                            <!--<skip>${skipTests}</skip>-->
                        <!--</configuration>-->
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>target/libs</outputDirectory>
                            <!-- configure the plugin here -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>3.3.0</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <!-- ignore client-side packages since those should be on the compiled widgetset -->
                        <Import-Package>!com.google.gwt.*,!com.vaadin.client.*,!org.vaadin.gwtol3.*,*</Import-Package>
                    </instructions>
                </configuration>
            </plugin>


        </plugins>

        <resources>
            <resource>
                <!-- This add sources, .gwt.xml files etc to jar from source directory.
                Not quite maven convention byt easiest to setup this way. -->
                <directory>src/main/java</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <!-- This is here to simplify working with GWT plugin during test widgetset
            compilation. Test widgetset is this way more like a real world usage and
            also lets your test up to e.g. use other add-ons. Ensure these are excluded
            from the artifact ( jar file ). -->
            <resource>
                <directory>src/test/resources</directory>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>

                <!-- Compile widget set for integration testing -->
                <plugin>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-maven-plugin</artifactId>
                    <version>${vaadin.version}</version>
                    <configuration>
                        <webappDirectory>${project.build.directory}/testwebapp/VAADIN/widgetsets</webappDirectory>
                        <extraJvmArgs>-Xmx1024M -Xss512m -XX:MaxPermSize=1024m</extraJvmArgs>
                        <hostedWebapp>${project.build.directory}/testwebapp</hostedWebapp>
                        <noServer>true</noServer>
                        <runTarget>http://localhost:9998/</runTarget>
                        <draftCompile>true</draftCompile>
                        <style>PRETTY</style>
                        <!-- We only need to compile the test widgetset, if not defined gwt
                        module will also compile the add-on widgetset as well -->
                        <module>org.vaadin.addon.vol3.demoandtestapp.TestWidgetSet</module>
                        <!-- If you do lots of e.g. plain css changes and don't wish to use
                        hosted mode, you can force compile easily with uncommenting following rule -->
                        <!-- 						<force>true</force> -->
                        <!--<strict>true</strict>-->
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <!-- Files here might match to naming convetions, but the are just
                            vaadin apps containing you add-on components in varios setups. We can ignore
                            them from test. -->
                            <exclude>**/demoandtestapp/*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.vaadin</groupId>
                                        <artifactId>vaadin-maven-plugin</artifactId>
                                        <versionRange>[2.3.0-1,)</versionRange>
                                        <goals>
                                            <goal>compile</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.0.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <property>
                    <name>dev</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>

                        <configuration>
                            <mainClass>com.google.gwt.dev.codeserver.CodeServer</mainClass>
                            <arguments>
                                <argument>-src</argument>
                                <argument>${basedir}/../gwt-ol3/src/main/java</argument>
                                <argument>-src</argument>
                                <argument>${basedir}/../gwt-ol3/src/main/resources</argument>
                                <argument>-src</argument>
                                <argument>${basedir}/../v-ol3/src/main/java</argument>
                                <argument>-src</argument>
                                <argument>${basedir}/../v-ol3/src/main/resources</argument>
                                <argument>org.vaadin.addon.vol3.demoandtestapp.TestWidgetSet</argument>
                            </arguments>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
